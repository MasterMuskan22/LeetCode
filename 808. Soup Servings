/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    double getProb(int i,int j,unordered_map<int,unordered_map<int,double>> &dp){
        if(i<=0 && j<=0) rt((double)0.5);
        if(i<=0) rt((double)1);
        if(j<=0) rt(0);
        if(dp[i].count(j)) rt(dp[i][j]);
        return dp[i][j]=(double)(getProb(i-4,j,dp)+getProb(i-3,j-1,dp)+getProb(i-2,j-2,dp)+getProb(i-1,j-3,dp))/(double)4;
    }
    double soupServings(int n) {
        int servings=ceil(n/25.0);
        unordered_map<int,unordered_map<int,double>> dp;
        rep(i,1,servings+1){
            if(getProb(i,i,dp)>1-1e-5) rt((double)1);
        }
        return (double)getProb(servings,servings,dp);
    }
};
