/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public:
    int maximalRectangle(vector<vector<char>>& matrix) {
        int m=sz(matrix);
        int n=sz(matrix[0]);
        int max_area=0;
        vii dp(m+1,vi(n+1,0));
        rep(i,1,m+1){
            rep(j,1,n+1){
                if(matrix[i-1][j-1]=='1'){
                    dp[i][j]=1+dp[i][j-1];
                }
            }
        }
        rep(i,1,m+1){
            rep(j,1,n+1){
                int width=dp[i][j];
                int height=1;
                int k=i-1;
                max_area=max(max_area,width*height);
                while(k && dp[k][j]){
                    height++;
                    width=min(width,dp[k][j]);
                    k--;
                    max_area=max(max_area,width*height);
                }
            }
        }
        rt(max_area);
    }
};
