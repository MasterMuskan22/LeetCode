/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    int getMinTurns(int i,int j,string &s,vii &dp){
        if(i==j) rt(1);
        if(dp[i][j]!=-1) rt(dp[i][j]);
        int mini=1e9;
        rep(k,i,j){
            mini=min(mini,getMinTurns(i,k,s,dp)+getMinTurns(k+1,j,s,dp));
        }
        return dp[i][j]=s[i]==s[j]?mini-1:mini;
    }
    int strangePrinter(string s) {
        int n=sz(s);
        // vii dp(n,vi(n,-1));
        // return getMinTurns(0,n-1,s,dp);
        vii dp(n,vi(n,0));
        rep(i,0,n) dp[i][i]=1;
        rep(k,1,n){
            rep(i,0,n-k){
                int j=i+k;
                if(s[i]==s[j]) dp[i][j]=dp[i][j-1];
                else{
                    int mini=1e9;
                    rep(l,i,j) mini=min(mini,dp[i][l]+dp[l+1][j]);
                    dp[i][j]=mini;
                }
            }
        }
        rt(dp[0][n-1]);
    }
};
