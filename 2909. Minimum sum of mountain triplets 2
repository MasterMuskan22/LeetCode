/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define all(v) (v).begin(),(v).end()
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public:
    int minimumSum(vector<int>& nums) {
        int n=sz(nums);
        vi pref(n,-1);
        vi suff(n,-1);
        pref[0]=-1;
        int mini=nums[0];
        rep(i,1,n){
            if(mini<nums[i]) pref[i]=mini;
            mini=min(mini,nums[i]);
        }
        int maxi=nums[n-1];
        suff[n-1]=-1;
        for(int i=n-2;i>=0;i--){
            if(maxi<nums[i]) suff[i]=maxi;
            maxi=min(maxi,nums[i]);
        }
        int min_sum=1e9;
        debug(suff);
        cout<<endl;
        rep(i,0,n){
            if(pref[i]!=-1 && suff[i]!=-1) min_sum=min(min_sum,nums[i]+pref[i]+suff[i]);
        }
        if(min_sum==1e9) rt(-1);
        rt(min_sum);
    }
};
