/*The ways to success lies in hardwork,consistency,dedication,gratitude and all 
that with a sweet smile on the face.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    int candy(vector<int>& ratings) {
        int n=sz(ratings);
        vi res(sz(ratings),1);
        if(n==1) rt(1);
        int i=0,j=sz(ratings)-1;
        while(i<sz(ratings)){
            if(i==0){
                if(ratings[i+1]<ratings[i]) res[i]=res[i+1]+1;
                i++;
            }
            else if(i==sz(ratings)-1){
                if(ratings[i]>ratings[i-1]) res[i]=res[i-1]+1;
                i++;
            }
            else{
                if(ratings[i]>ratings[i-1] && ratings[i]>ratings[i+1]){
                    res[i]=max(res[i-1]+1,res[i+1]+1);
                }
                else if(ratings[i]>ratings[i-1]) res[i]=res[i-1]+1;
                else if(ratings[i]>ratings[i+1]) res[i]=res[i+1]+1;
                i++;
            }
        }
        vi ans(sz(ratings),1);
        while(j>=0){
            if(j==0){
                if(ratings[j+1]<ratings[j]) ans[j]=ans[j+1]+1;
                j--;
            }
            else if(j==sz(ratings)-1){
                if(ratings[j]>ratings[j-1]) ans[j]=ans[j-1]+1;
                j--;
            }
            else{
                if(ratings[j]>ratings[j-1] && ratings[j]>ratings[j+1]){
                    ans[j]=max(ans[j-1]+1,ans[j+1]+1);
                }
                else if(ratings[j]>ratings[j-1]) ans[j]=ans[j-1]+1;
                else if(ratings[j]>ratings[j+1]) ans[j]=ans[j+1]+1;
                j--;
            }
        }
        int cnt=0;
        rep(i,0,sz(res)){
            cnt+=max(res[i],ans[i]);
        }
        rt(cnt);
    }
};
