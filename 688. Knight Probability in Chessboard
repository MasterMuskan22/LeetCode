/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-2,-2,-1,-1,2,2,1,1};
int dc1[8]={1,-1,2,-2,1,-1,2,-2};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    double knightProbability(int n, int k, int row, int column) {
        int cnt=0;
        int tot=0;
        vector<vector<double>> dp(n,vector<double>(n,0));
        dp[row][column]=1.0;
        rep(moves,0,k){
            vector<vector<double>> ndp(n,vector<double>(n,0));
            rep(i,0,n){
                rep(j,0,n){
                    rep(x,0,8){
                        int nRow=i+dr1[x];
                        int nCol=j+dc1[x];
                        if(nRow>=0 && nRow<n && nCol>=0 && nCol<n){
                            ndp[i][j]+=(dp[nRow][nCol]/8.0);
                        }
                    }
                }
            }
            dp=ndp;
        }
        double prob=0.0;
        rep(i,0,n){
            rep(j,0,n){
                prob+=dp[i][j];
            }
        }
        rt(prob);
    }
};
