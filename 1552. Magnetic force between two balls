#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define all(v) (v).begin(),(v).end()
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public:
    int maxDistance(vector<int>& position, int m) {
        srt(position);
        int start=1,end=position.back()-position.front();
        auto isValid=[&](vi &arr,int mid,int m){
            int prev=0;
            int j=0;
            rep(i,1,m){
                while(j<sz(arr) && arr[prev]+mid>arr[j]) j++;
                if(j>=sz(arr)) rt(0);
                prev=j;
            }
            rt(1);
        };
        while(start<=end){
            int mid=start+(end-start)/2;
            if(isValid(position,mid,m)) start=mid+1;
            else end=mid-1;
        }
        rt(start-1);
    }
};
