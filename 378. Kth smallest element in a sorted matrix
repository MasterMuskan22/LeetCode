/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define all(v) (v).begin(),(v).end()
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public: 
    int getSmallerCount(int mid,vii &matrix){
        int row=0,col=sz(matrix[0])-1;
        int cnt=0;
        rep(i,0,sz(matrix)){
            while(col>=0 && matrix[i][col]>mid) col--;
            cnt+=(col+1);
        }
        rt(cnt);
    }
    int kthSmallest(vector<vector<int>>& matrix, int k) {
        int n=sz(matrix);
        // vi arr;
        // rep(i,0,n){
        //     rep(j,0,n){
        //         arr.pb(matrix[i][j]);
        //     }
        // }
        // srt(arr);
        // rt(arr[k-1]);
        int start=matrix[0][0],end=matrix[n-1][n-1];
        int res=-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(getSmallerCount(mid,matrix)>=k){
                res=mid;
                end=mid-1;
            }
            else start=mid+1;
        }
        rt(res);
    }
};
