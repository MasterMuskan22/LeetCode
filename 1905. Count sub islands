#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define all(v) (v).begin(),(v).end()
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public:
    void getCount(int i,int j,vii &grid1,vii &grid2,int &res){
        if(i<0 || i>=sz(grid1) || j<0 || j>=sz(grid1[0])) return ;
        if(grid1[i][j]==0 && grid2[i][j]==1) res=0;
        if(grid2[i][j]==0) return ;
        grid2[i][j]=0;
        rep(k,0,4){
            int nRow=i+dr[k];
            int nCol=j+dc[k];
            getCount(nRow,nCol,grid1,grid2,res);
        }
    }
    int countSubIslands(vector<vector<int>>& grid1, vector<vector<int>>& grid2) {
        int m=sz(grid1);
        int n=sz(grid1[0]);
        int cnt=0;
        rep(i,0,m){
            rep(j,0,n){
                if(grid2[i][j]==1){
                    int res=1;
                    getCount(i,j,grid1,grid2,res);
                    cnt+=res;
                }
            }
        }
        rt(cnt);
    }
};
