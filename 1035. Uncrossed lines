/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define all(v) (v).begin(),(v).end()
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public:
    int getMaxLines(int i,int j,vi &nums1,vi &nums2,vii &dp){
        if(i>=sz(nums1) || j>=sz(nums2)) rt(0);
        if(dp[i][j]!=-1) rt(dp[i][j]);
        int same=0;
        int notSame=0;
        if(nums1[i]==nums2[j]) same=1+getMaxLines(i+1,j+1,nums1,nums2,dp);
        else notSame=max(getMaxLines(i+1,j,nums1,nums2,dp),getMaxLines(i,j+1,nums1,nums2,dp));
        return dp[i][j]=same+notSame;
    }
    int maxUncrossedLines(vector<int>& nums1, vector<int>& nums2) {
        int m=sz(nums1);
        int n=sz(nums2);
        // vii dp(m,vi(n,-1));
        // return getMaxLines(0,0,nums1,nums2,dp);

        // vii dp(m+1,vi(n+1,0));
        // rep(i,1,m+1){
        //     rep(j,1,n+1){
        //         if(nums1[i-1]==nums2[j-1]) dp[i][j]=1+dp[i-1][j-1];
        //         else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
        //     }
        // }
        // rt(dp[m][n]);

        vi prev(n+1,0);
        vi cur(n+1,0);
        rep(i,1,m+1){
            rep(j,1,n+1){
                if(nums1[i-1]==nums2[j-1]) cur[j]=1+prev[j-1];
                else cur[j]=max(prev[j],cur[j-1]);
            }
            prev=cur;
        }
        rt(prev[n]);
    }
};
