/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        int n=sz(arr);
        vi prevMin(n,-1);
        vi nextMin(n,n);
        //NextMin
        stack<int> st;
        for(int i=n-1;i>=0;i--){
            while(!st.empty() && arr[st.top()]>=arr[i]) st.pop();
            if(st.empty()) nextMin[i]=n-i;
            else nextMin[i]=st.top()-i;
            st.push(i);
        }
        st=stack<int>();
        //PrevMin
        rep(i,0,n){
            while(!st.empty() && arr[st.top()]>arr[i]) st.pop();
            if(st.empty()) prevMin[i]=i+1;
            else prevMin[i]=i-st.top();
            st.push(i);
        }
        // debug(nextMin);
        // cout<<endl;
        // debug(prevMax);
        int sum=0;
        rep(i,0,n){
            ll prod=(prevMin[i]*nextMin[i])%mod;
            prod=(prod*arr[i])%mod;
            sum=(sum+prod)%mod;
            // sum+=(arr[i]*((prevMin[i]*nextMin[i])%mod))%mod;
        }
        rt(sum%mod);
    }
};
