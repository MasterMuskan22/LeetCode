/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    int getCount(vi &nums,int tar,vi &dp){
        if(tar==0) rt(1);
        if(dp[tar]!=-1) rt(dp[tar];)
        int cnt=0;
        rep(j,0,sz(nums)){
            if(tar>=nums[j]) cnt+=getCount(nums,tar-nums[j],dp);
        }
        rt(dp[tar]=cnt);
    }
    int combinationSum4(vector<int>& nums, int target) {
        // vi dp(target+1,-1);
        // return getCount(nums,target,dp);
        vector<unsigned int> dp(target+1,0);
        dp[0]=1;
        rep(i,1,target+1){
            for(auto it:nums){
                if(i>=it) dp[i]+=dp[i-it];
            }
        }
        rt(dp[target]);
    }
};
