/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define all(v) (v).begin(),(v).end()
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public:
    void getSubs(int i,string &s,string ans,vs &res){
        if(i>=sz(s)){
            if(sz(s)!=0) res.pb(ans);
            return ;
        }
        ans+=s[i];
        getSubs(i+1,s,ans,res);
        ans.pop_back();
        getSubs(i+1,s,ans,res);
    }
    void getPerm(string &s,unordered_set<string> &st){
        do{
            st.insert(s);
        }while(next_permutation(all(s)));   
    }
    int numTilePossibilities(string tiles) {
        srt(tiles);
        unordered_set<string> st;
        rep(i,0,sz(tiles)){
            string s="";
            rep(j,i,sz(tiles)){
                s+=tiles[j];
            }
            vs subs;
            string temp="";
            getSubs(0,s,temp,subs);
            for(auto it:subs){
                getPerm(it,st);
            }
        }
        rt(sz(st)-1);
    }
};
