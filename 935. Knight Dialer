#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define all(v) (v).begin(),(v).end()
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
int dr2[8]={-1,-2,-2,-1,1,2,2,1};
int dc2[8]={-2,-1,1,2,2,1,-1,2};
class Solution {
public:
    ll getCount(int i,int j,int n,vector<vlll> &dp){
        if(i<0 || j<0 || i>=4 || j>=3 || (i==3 && j!=1)) rt(0);
        if(n==1) rt(1);
        if(dp[n][i][j]!=-1) rt(dp[n][i][j]);
        dp[n][i][j]=getCount(i-1,j-2,n-1,dp)%mod+getCount(i-2,j-1,n-1,dp)%mod+getCount(i-2,j+1,n-1,dp)%mod+getCount(i-1,j+2,n-1,dp)%mod+getCount(i+1,j+2,n-1,dp)%mod+getCount(i+2,j+1,n-1,dp)%mod+getCount(i+2,j-1,n-1,dp)%mod+getCount(i+1,j-2,n-1,dp)%mod;
        return dp[n][i][j]%mod;
    }
    int knightDialer(int n) {
        int total=0;
        vector<vlll> dp(n+1,vlll(4,vll(3,-1)));
        rep(i,0,4){
            rep(j,0,3){
                total=(total+getCount(i,j,n,dp))%mod;
            }
        }
        rt(total);
    }
};
