#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define all(v) (v).begin(),(v).end()
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public:
    bool isCommon(string &s,string &t){
        bool ch1=1,ch2=1;
        if(sz(s)>sz(t)) rt(0);
        rep(i,0,sz(s)){
            if(s[i]!=t[i]){
                ch1=0;
                break;
            }
        }
        int i=sz(s)-1,j=sz(t)-1;
        while(i>=0){
            if(s[i]!=t[j]){
                ch2=0;
                break;
            }
            i--,j--;
        }
        return (ch1 && ch2);
    }
    int countPrefixSuffixPairs(vector<string>& words) {
        int res=0;
        int n=sz(words);
        rep(i,0,n){
            rep(j,i+1,n){
                if(isCommon(words[i],words[j])) res++;
            }
        }
        rt(res);
    }
};
