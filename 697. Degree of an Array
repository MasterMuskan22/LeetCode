/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public:
    int findShortestSubArray(vector<int>& nums) {
        int maxi=-1e9;
        umap mp;
        for(auto it:nums) mp[it]++;
        for(auto it:mp) maxi=max(maxi,it.second);
        vi arr;
        for(auto it:mp){
            if(it.second==maxi){
               arr.pb(it.first); 
            }
        }
        int res=1e9;
        int ind1=-1,ind2=-1;
        for(auto it:arr){
            int num=it;
            rep(i,0,sz(nums)){
                if(nums[i]==num){
                    ind1=i;
                    break;
                }
            }
            for(int i=sz(nums)-1;i>=0;i--){
                if(nums[i]==num){
                    ind2=i;
                    break;
                }
            }
            res=min(res,ind2-ind1+1);
        }
        rt(res);
    }
};
