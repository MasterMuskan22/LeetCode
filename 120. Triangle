/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    int getSum(int i,int prev,vii &arr,vii &dp){
        if(i>=sz(arr)) rt(0);
        if(dp[i][prev+1]!=-1) rt(dp[i][prev+1]);
        if(prev==-1) return dp[i][prev+1]=arr[i][0]+getSum(i+1,0,arr,dp);
        return dp[i][prev+1]=min(arr[i][prev]+getSum(i+1,prev,arr,dp),arr[i][prev+1]+getSum(i+1,prev+1,arr,dp));
    }
    int minimumTotal(vector<vector<int>>& triangle) {
        //TC = O(2^N)
        //SC = O(N*N)+O(N*N)
        // vii dp(sz(triangle),vi(sz(triangle)+1,-1));
        // rt(getSum(0,-1,triangle,dp));

        //TC = O(N*N)
        //SC = O(N*N)
        int n=sz(triangle);
        vii dp(n,vi(n,0));
        rep(j,0,n) dp[n-1][j]=triangle[n-1][j];
        for(int i=n-2;i>=0;i--){
            for(int j=i;j>=0;j--){
                dp[i][j]=triangle[i][j]+min(dp[i+1][j+1],dp[i+1][j]);
            }
        }
        rt(dp[0][0]);
    }
};
