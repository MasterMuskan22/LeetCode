/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public:
    int getMaxPoints(int i,vi &arr,vi &dp){
        if(i>=sz(arr)) rt(0);
        if(dp[i]!=-1) rt(dp[i]);
        int take=0,notTake=0;
        take=arr[i];
        if(i+2<sz(arr)) take+=getMaxPoints(i+2,arr,dp);
        notTake=getMaxPoints(i+1,arr,dp);
        return dp[i]=max(take,notTake);
    }
    int deleteAndEarn(vector<int>& nums) {
        int n=sz(nums);
        vi arr(100001,0);
        for(auto it:nums) arr[it]+=it;
        // vi dp(100001,-1);
        // return getMaxPoints(0,arr,dp);
        vi dp(100001,0);
        dp[0]=0,dp[1]=arr[1];
        rep(i,2,100001){
            dp[i]=max(arr[i]+dp[i-2],dp[i-1]);
        }
        rt(dp[100000]);
    }
};
