/*The ways to success lies in hardwork,consistency,dedication,gratitude and all 
that with a sweet smile on the face.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        vii arr=image;
        int m=sz(arr);
        int n=sz(arr[0]);
        vii vis(m,vi(n,0));
        vis[sr][sc]=1;
        queue<pi> q;
        q.push({sr,sc});
        arr[sr][sc]=color;
        while(!q.empty()){
            int r=q.front().first;
            int c=q.front().second;
            q.pop();
            rep(i,0,4){
                int nRow=r+dr[i];
                int nCol=c+dc[i];
                if(nRow>=0 && nRow<m && nCol>=0 && nCol<n && arr[nRow][nCol]==image[sr][sc] 
                && vis[nRow][nCol]==0){
                    arr[nRow][nCol]=color;
                    q.push({nRow,nCol});
                    vis[nRow][nCol]=1;
                }
            }
        }
        rt(arr);
    }
};
