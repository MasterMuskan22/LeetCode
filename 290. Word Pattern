/*The ways to success lies in hardwork,consistency,dedication,gratitude and all 
that with a sweet smile on the face.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    bool wordPattern(string pattern, string s) {
        vs v;
        string x="";
        int i=0;
        while(i<sz(s)){
            if(s[i]==' '){
                v.push_back(x);
                x="";
            }
            else x+=s[i];
            i++;
        }
        v.push_back(x);
        if(sz(pattern)!=sz(v)) rt(0);
        unordered_map<char,string> mp;
        set<string> st;
        // debug(v);
        rep(i,0,sz(v)){
            if(mp.find(pattern[i])!=mp.end()){
                if(mp[pattern[i]]!=v[i]) rt(0);
            }
            else{
                if(st.count(v[i])>0) rt(0);
                mp[pattern[i]]=v[i];
                st.insert(v[i]);
            }
        }
        rt(1);
    }
};
