/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public:
    bool isPal(int i,int j,string &s){
        while(i<j){
            if(s[i]!=s[j]) rt(0);
            i++,j--;
        }
        rt(1);
    }
    int getMinCuts(int i,string &s,vi &dp){
        if(i>=sz(s)) rt(0);
        if(dp[i]!=-1) rt(dp[i]);
        int min_cost=1e9;
        rep(j,i,sz(s)){
            if(isPal(i,j,s)){
                int cost=1+getMinCuts(j+1,s,dp);
                min_cost=min(min_cost,cost);
            }
        }
        rt(dp[i]=min_cost);
    }
    int minCut(string s) {
        // vi dp(sz(s),-1);
        // return getMinCuts(0,s,dp)-1;
        vi dp(sz(s)+1,0);
        for(int i=sz(s)-1;i>=0;i--){
            int min_cost=1e9;
            rep(j,i,sz(s)){
                if(isPal(i,j,s)){
                    int cost=1+dp[j+1];
                    min_cost=min(min_cost,cost);
                }
            }
            dp[i]=min_cost;
        }
        rt(dp[0]-1);
    }
};
