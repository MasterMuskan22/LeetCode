/*The ways to success lies in hardwork,consistency,dedication,gratitude and all 
that with a sweet smile on the face.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    long long totalCost(vector<int>& costs, int k, int candidates) {
        priority_queue<pi,vector<pi>,greater<>> pq;
        int i=0,j=0;
        for(;i<candidates;i++) pq.push({costs[i],0});
        int x=sz(costs);
        j=max(i,x-candidates);
        for(int k=j;k<x;k++) pq.push({costs[k],1});
        ll res=0;
        j--;
        while(k--){
            auto it=pq.top();
            pq.pop();
            res+=it.first;
            int dir=it.second;
            if(i>j) continue;
            if(dir==1){
                pq.push({costs[j--],1});
            }
            else pq.push({costs[i++],0});
        }
        rt(res);
    }
};
