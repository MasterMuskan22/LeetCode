/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
// #define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    double getTime(vi &dist,int speed){
        double time=0;
        rep(i,0,sz(dist)-1){
            int t=0;
            if(dist[i]%speed==0) t=dist[i]/speed;
            else t=(dist[i]/speed)+1;
            time+=(double)t;
        }
        double t=dist[sz(dist)-1]/(double)speed;
        time+=t;
        rt(time);
    }
    int minSpeedOnTime(vector<int>& dist, double hour) {
        int start=1,end=1e9;
        while(start<=end){
            int mid=start+(end-start)/2;
            double time=getTime(dist,mid);
            if(time<=hour) end=mid-1;
            else start=mid+1;
        }
        if(start>1e9) rt(-1);
        rt(start);
    }
};
