/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define all(v) (v).begin(),(v).end()
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public:
    vi getPrimeNums(int n){
        vi arr;
        int i=2;
        while(n>1){
            if(n%i==0){
                arr.pb(i);
                n/=i;
            }
            else i++;
        }
        rt(arr);
    }
    int distinctPrimeFactors(vector<int>& nums) {
        // unordered_set<int> st;
        // vi dp(1001,1);
        // dp[0]=0,dp[1]=0;
        // for(int i=2;i*i<=1000;i++){
        //     if(dp[i]==1){
        //         for(int j=2*i;j<=1000;j+=i){
        //             dp[j]=0;
        //         }
        //     }
        // }
        // for(auto it:nums){
        //     rep(i,2,1001){
        //         if(dp[i]==1 && it%i==0) st.insert(i);
        //         if(dp[i]>it) break;
        //     }
        // }
        // rt(sz(st));
        unordered_set<int> st;
        for(auto it:nums){
            vi arr=getPrimeNums(it);
            for(auto i:arr) st.insert(i);
        }
        rt(sz(st));
    }
};
