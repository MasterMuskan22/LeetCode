/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        int n=sz(board);
        rep(i,0,9){
            unordered_set<char> st;
            rep(j,0,9){
                if(st.find(board[i][j])!=st.end()) rt(0);
                else{
                    if(board[i][j]!='.') st.insert(board[i][j]);
                }
            }
        }
        rep(j,0,9){
            unordered_set<char> st;
            rep(i,0,9){
                if(st.find(board[i][j])!=st.end()) rt(0);
                else{
                    if(board[i][j]!='.') st.insert(board[i][j]);
                }
            }
        }
        unordered_set<char> st[9];
        rep(i,0,9){
            rep(j,0,9){
                char ch=board[i][j];
                int ind=(i/3)*3+(j/3);
                if(st[ind].count(ch)) rt(0);
                else{
                    if(ch!='.') st[ind].insert(ch);
                }
            }
        }
        rt(1);
    }
};
