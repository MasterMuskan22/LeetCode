/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define lli long long int
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define vc vector<char>
#define vcc vector<vector<char>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define pll pair<ll,ll>
#define umap unordered_map<int,int>
#define umapl unordered_map<ll,ll>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
class Solution {
public:
    int numOfSubarrays(vector<int>& arr) {
        int n=sz(arr);
        vi odd_sum(n,0);
        vi even_sum(n,0);
        for(auto &it:arr) it%=2;
        if(arr[n-1]==1) odd_sum[n-1]=1;
        else even_sum[n-1]=1;
        for(int i=n-2;i>=0;i--){
            if(arr[i]==1){
                odd_sum[i]=(even_sum[i+1]+1)%mod;
                even_sum[i]=(odd_sum[i+1])%mod;
            }
            else{
                even_sum[i]=(even_sum[i+1]+1)%mod;
                odd_sum[i]=(odd_sum[i+1])%mod;
            }
        }
        int sum=0;
        for(auto it:odd_sum) sum=(sum+it)%mod;
        rt(sum%mod);
    }
};
