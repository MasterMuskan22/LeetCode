/*The ways to success lies in hardwork,consistency,dedication,gratitude and all 
that with a sweet smile on the face.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    int monotoneIncreasingDigits(int n) {
        string s=to_string(n);
        int ind=-1;
        //Find the last index from end which is greater than its next index value
        //and from that index's next make all 9 and that index to val-1
        for(int i=sz(s)-1;i>0;i--){
            if(s[i-1]>s[i]){
                ind=i;
                s[i-1]=s[i-1]-1;
            }
        }
        // cout<<s;
        rep(i,ind,sz(s)) s[i]='9';
        int res=stoi(s);
        rt(res);
    }
};
