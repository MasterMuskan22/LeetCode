/*Success is achieved by perseverance, devotion, thankfulness, and 
hard workâ€”all while wearing a charming grin.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define vs vector<string> 
#define vss vector<vector<string>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
int dr1[8]={-1,-1,0,1,1,1,0,-1};
int dc1[8]={0,1,1,1,0,-1,-1,-1};
int mod=1e9+7;
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    bool isPossible(int i,int j,int k,string &s1,string &s2,string &s3,vii &dp){
        if(i>=sz(s1) && j>=sz(s2) && k>=sz(s3)) rt(1);
        if(dp[i][j]!=-1) rt(dp[i][j]);
        bool same=0,notSame=0;
        if(i!=sz(s1)){
            if(s1[i]==s3[k]) same|=isPossible(i+1,j,k+1,s1,s2,s3,dp);
        }
        if(j!=sz(s2)){
            if(s2[j]==s3[k]) same|=isPossible(i,j+1,k+1,s1,s2,s3,dp);
        }
        return dp[i][j]=same;
    }
    bool isInterleave(string s1, string s2, string s3) {
        int n=sz(s1);
        int m=sz(s2);
        int k=sz(s3);
        if(n+m!=k) rt(0);
        vii dp(n+1,vi(m+1,-1));
        return isPossible(0,0,0,s1,s2,s3,dp);
    }
};
