/*The ways to success lies in hardwork,consistency,dedication,gratitude and all 
that with a sweet smile on the face.*/
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vii vector<vector<int>>
#define vlll vector<vector<ll>>
#define pb(x) push_back(x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define srt(v) sort(begin(v),end(v));
#define srtr(v) sort(rbegin(v),rend(v))
#define rev(v) reverse(begin(v),end(v))
#define pi pair<int,int>
#define rt(v) return v
#define sz(v) size(v)
#define mpdebug(mp) for(auto it:mp){cout<<it.first<<" "<<it.second<<endl;}
#define debug(v) for(auto it:v) cout<<it<<" ";
int dr[4]={-1,0,1,0};
int dc[4]={0,1,0,-1};
#define speed ios_base::sync_with_stdio(false); cin.tie(NULL);
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        speed;
        //TC = O(M+N)
        //SC = O(1)
        int start=m+n-1;
        int i=m-1,j=n-1;
        while(i>=0 && j>=0){
            if(nums1[i]<nums2[j]){
                nums1[start--]=nums2[j--];
            }
            else{
                nums1[start--]=nums1[i--];
            }
        }
        while(i>=0) nums1[start--]=nums1[i--];
        while(j>=0) nums1[start--]=nums2[j--]; 
        //TC = O(M)+O(N)+O(MlogM)
        //SC = O(M)
        // vi arr;
        // rep(i,0,m) arr.pb(nums1[i]);
        // rep(i,0,n) arr.pb(nums2[i]);
        // srt(arr);
        // nums1=arr;
    }
};
